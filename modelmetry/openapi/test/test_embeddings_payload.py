# coding: utf-8

"""
    Modelmetry API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from modelmetry.openapi.models.embeddings_payload import EmbeddingsPayload

class TestEmbeddingsPayload(unittest.TestCase):
    """EmbeddingsPayload unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EmbeddingsPayload:
        """Test EmbeddingsPayload
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EmbeddingsPayload`
        """
        model = EmbeddingsPayload()
        if include_optional:
            return EmbeddingsPayload(
                inputs = [
                    ''
                    ],
                options = modelmetry.openapi.models.simple_options.SimpleOptions(
                    frequency_penalty = 1.337, 
                    logprobs = True, 
                    max_tokens = 56, 
                    n = 56, 
                    presence_penalty = 1.337, 
                    seed = 56, 
                    stream = True, 
                    temperature = 0, 
                    timeout = 0, 
                    tool_choice = '', 
                    tools = [
                        modelmetry.openapi.models.tool.Tool(
                            description = '', 
                            name = '', 
                            parameters = null, )
                        ], 
                    top_logprobs = 56, 
                    top_p = 0, 
                    user = '', )
            )
        else:
            return EmbeddingsPayload(
                inputs = [
                    ''
                    ],
                options = modelmetry.openapi.models.simple_options.SimpleOptions(
                    frequency_penalty = 1.337, 
                    logprobs = True, 
                    max_tokens = 56, 
                    n = 56, 
                    presence_penalty = 1.337, 
                    seed = 56, 
                    stream = True, 
                    temperature = 0, 
                    timeout = 0, 
                    tool_choice = '', 
                    tools = [
                        modelmetry.openapi.models.tool.Tool(
                            description = '', 
                            name = '', 
                            parameters = null, )
                        ], 
                    top_logprobs = 56, 
                    top_p = 0, 
                    user = '', ),
        )
        """

    def testEmbeddingsPayload(self):
        """Test EmbeddingsPayload"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
