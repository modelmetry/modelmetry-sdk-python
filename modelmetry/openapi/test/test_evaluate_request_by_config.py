# coding: utf-8

"""
    Modelmetry API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from modelmetry.openapi.models.evaluate_request_by_config import EvaluateRequestByConfig

class TestEvaluateRequestByConfig(unittest.TestCase):
    """EvaluateRequestByConfig unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> EvaluateRequestByConfig:
        """Test EvaluateRequestByConfig
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `EvaluateRequestByConfig`
        """
        model = EvaluateRequestByConfig()
        if include_optional:
            return EvaluateRequestByConfig(
                config = None,
                evaluator_id = '',
                grading = modelmetry.openapi.models.grading_configuration.GradingConfiguration(
                    assessments = [
                        modelmetry.openapi.models.assessment.Assessment(
                            action = 'pass', 
                            expression = '', 
                            id = '', 
                            message = '', )
                        ], ),
                payload = modelmetry.openapi.models.payload.Payload(
                    completion = {
                        'key' : null
                        }, ),
                secrets = [
                    ''
                    ]
            )
        else:
            return EvaluateRequestByConfig(
                config = None,
                evaluator_id = '',
                payload = modelmetry.openapi.models.payload.Payload(
                    completion = {
                        'key' : null
                        }, ),
        )
        """

    def testEvaluateRequestByConfig(self):
        """Test EvaluateRequestByConfig"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
